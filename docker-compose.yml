version: '3'
services:
  database:
    restart: unless-stopped
    image: 'postgres:latest'
    # to avoid collision with local postgres port
    ports:
      - ${POSTGRES_REDIRECT_PORT}:${POSTGRES_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
  api:
    restart: unless-stopped
    build:
        context: ./
        dockerfile: api/Dockerfile
    depends_on:
      - database
    ports:
      - '${API_PORT}:${API_PORT}'
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'
    env_file:
      - .env
    environment:
      API_PORT: ${API_PORT}
      REDWOOD_API_URL: ${API_URL}
      DATABASE_URL: ${DATABASE_URL}
  web:
    restart: unless-stopped
    build:
        context: ./
        dockerfile: web/Dockerfile
    depends_on:
      - api
    ports:
      - '${APP_PORT}:${APP_PORT}'
    logging:
      driver: 'json-file'
      options:
        max-size: '200k'
        max-file: '10'
    env_file:
      - .env
    environment:
        APP_PORT: ${APP_PORT}

  #https://hub.docker.com/r/prodrigestivill/postgres-backup-local
  #! run following command on virtual machine once to grant permissions
  # sudo mkdir -p /var/opt/pgbackups && sudo  chown -R 999:999 /var/opt/pgbackups
  pgbackups:
    image: prodrigestivill/postgres-backup-local
    restart: always
    user: postgres:postgres
    volumes:
      - /var/opt/pgbackups:/backups
    links:
      - database
    depends_on:
      - database
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_EXTRA_OPTS=-Z6 --schema=public --blobs
      - SCHEDULE=@hourly
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080

volumes:
    pgdata:
